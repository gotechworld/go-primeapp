  # This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Compile, Build and Test the GO command-line app

on:
  push:
    branches: [ "master" ]
    tags:
      - "*.*.*"
  pull_request:
    branches: [ "master" ]
    tags:
      - "*.*.*"
  workflow_dispatch:

jobs:

  build:
    name: Compile and Test
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        id: clone repo
        uses: actions/checkout@master
      - name: Setup go
        id: setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - run: make test
      - name: Archive code coverage results
        id: archive-code-coverage-results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: bin
      - name: Posting Action Workflow updates to Slack
        id: slack notification
        uses: act10ns/slack@v2
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#github-actions'
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}     
      
  SCA:
    name: Snyk Scanning
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        id: snyk scan
        uses: snyk/actions/golang@master
        continue-on-error: true 
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        id: upload-sarif
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif 
      - name: Posting Action Workflow updates to Slack
        id: slack notification
        uses: act10ns/slack@v2
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#github-actions'
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}   
      

  SAST:
    name: SonarCloud Trigger
    needs: SCA
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        id: clone repo
        uses: actions/checkout@master
      - name: Download code coverage results
        id: download-code-coverage-results
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report
          path: bin
      - name: Analyze with SonarCloud
        id: sonarcloud scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.VCS_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   
      - name: Posting Action Workflow updates to Slack
        id: slack notification
        uses: act10ns/slack@v2
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#github-actions'
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}   
          
  Docker-Build-Push:
    name: Docker Build and Push
    needs: SAST
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        id: docker_login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: docker setup
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        id:   docker build and push image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Posting Action Workflow updates to Slack
        id: slack notification
        uses: act10ns/slack@v2
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#github-actions'
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
  Footprint:
    name: Explore GitHub Actions
    needs: Docker-Build-Push
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0       
          
